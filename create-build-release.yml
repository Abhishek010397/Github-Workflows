name: spluto-collector-build-release

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: "Select the environment you want to deploy"
        required: true
        default: sandbox
      de-nile-app-branch:
        description: "App's sources branch eg. 'refs/heads/'"
        required: true
        default: refs/heads/master
      helm-service-name:
        description: "provide the helm service name for helm chart"
        required: true
        default: collector
      k8s-namespace:
        description: "Kubernetes namespace used to deploy App"
        required: false



env:
  # These are configurable
  TARGET_ENV: ${{ github.event.inputs.environment }}
  ECR_REPOSITORY: ecr-repo
  HELM_SERVICE_NAME: ${{ github.event.inputs.helm-service-name }}
  K8S_NAMESPACE: ${{ github.event.inputs.k8s-namespace }}
  K8S_NAMESPACE_SUFFIX: namespace-suffix
  DOCKERFILE_DIRECTORY_NAME: dockerfile
  APPLICATION_NAME: app1
  CODE_DIRECTORY_NAME: jave-code
  HELM_CHART_NAME: my-chart

jobs:

  create-ecr:
    runs-on: ubuntu-latest
    outputs:
      ecr-repo-name: ${{ steps.create-ecr.outputs.ecr-repo-name }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/prereq-create-ecr
        with:
          aws-region: us-east-1
          ecr-repository: ${{ env.ECR_REPOSITORY }}
          token: ${{ secrets.TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ECR }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ECR }}

  build_image:
    runs-on: ubuntu-latest
    outputs:
      github_sha: ${{ steps.build-tag.outputs.github_sha }}
    environment:
      name: ${TARGET_ENV}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/build-image
        with:
          JAVA_VERSION: 17
          GITHUB_REPOSITORY: target-java-code-repository
          TOKEN: ${{ secrets.TOKEN }}
          REF: ${{ github.event.inputs.de-nile-app-branch }}
          PERSISTENT_CREDENTIALS: 'false'
          PATH: mypath
          CACHE_NAME: mvn.cache
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERID }}
          NEXUS_PASS: ${{ secrets.NEXUS_PASSWORD }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ECR }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ECR }}
          aws-region: us-east-1
          IMAGE_TAG: ${{ github.sha }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          DOCKERFILE_DIRECTORY_NAME: ${{ env.DOCKERFILE_DIRECTORY_NAME }}
          APPLICATION_NAME: ${{ env.APPLICATION_NAME }}
          CODE_DIRECTORY_NAME: ${{ env.CODE_DIRECTORY_NAME }}

  deploy_helm_chart:
    runs-on: ubuntu-latest
    needs: build_image
    environment:
      name: ${TARGET_ENV}
    strategy:
      matrix:
        cluster: [eks1]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Env Variables
        uses: ./.github/actions/setup-env
        with:
          k8n-namespace: ${{ env.K8S_NAMESPACE }}
          k8n-namespace-suffix: ${{ env.K8S_NAMESPACE_SUFFIX }}
      - uses: ./.github/actions/hashicorp-vault
        with:
          url: ${{ secrets.VAULT_ADDRESS_DE_SANDBOX }}
          token: ${{ secrets.VAULT_TOKEN_DE_SANDBOX_RO }}
          cluster: ${{ matrix.cluster }}
      - uses: azure/setup-kubectl@v1
      - uses: azure/setup-helm@v1
      - uses: ./.github/actions/setup-kubeconfig
      - uses: ./.github/actions/deploy-helm
        with:
          chart_name: ${{ env.HELM_CHART_NAME }}
          env: ${{ env.TARGET_ENV }}
          image_tag: ${{ needs.build_image.outputs.github_sha }}
          HELM_SERVICE_NAME: ${{ env.HELM_SERVICE_NAME }}
          namespace: ${{ env.K8S_NAMESPACE }}
